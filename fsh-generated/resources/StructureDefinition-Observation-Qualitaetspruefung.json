{
  "resourceType": "StructureDefinition",
  "id": "Observation-Qualitaetspruefung",
  "extension": [
    {
      "url": "https://www.medizininformatik-initiative.de/fhir/modul-meta/StructureDefinition/mii-ex-meta-license-codeable",
      "valueCodeableConcept": {
        "coding": [
          {
            "code": "CC-BY-4.0",
            "system": "http://hl7.org/fhir/spdx-license",
            "display": "Creative Commons Attribution 4.0 International"
          }
        ]
      }
    }
  ],
  "url": "https://www.medizininformatik-initiative.de/fhir/ext/modul-biobank/StructureDefinition/Observation-Qualitaetspruefung",
  "version": "2026.0.0-preview",
  "name": "ProfileObservationQualiaetspruefung",
  "title": "Profile - Observation - Qualitätsprüfung",
  "status": "active",
  "publisher": "Medizininformatik Initiative",
  "contact": [
    {
      "telecom": [
        {
          "system": "url",
          "value": "https://www.medizininformatik-initiative.de"
        }
      ]
    }
  ],
  "description": "Art und Ergebnis einer an einer Zelline oder einem Organiod durchgeführten Qualitätsprüfung",
  "fhirVersion": "4.0.1",
  "kind": "resource",
  "abstract": false,
  "type": "Observation",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Observation",
  "derivation": "constraint",
  "differential": {
    "element": [
      {
        "id": "Observation.code",
        "path": "Observation.code",
        "patternCodeableConcept": {
          "coding": [
            {
              "code": "386404008",
              "system": "http://snomed.info/sct",
              "display": "Quality monitoring (procedure)"
            }
          ]
        },
        "mustSupport": true
      },
      {
        "id": "Observation.focus",
        "path": "Observation.focus",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Reference",
            "targetProfile": [
              "https://www.medizininformatik-initiative.de/fhir/ext/modul-biobank/StructureDefinition/Specimen"
            ]
          }
        ],
        "mustSupport": true
      },
      {
        "id": "Observation.effective[x]",
        "path": "Observation.effective[x]",
        "min": 1,
        "mustSupport": true
      },
      {
        "id": "Observation.value[x]",
        "path": "Observation.value[x]",
        "max": "0"
      },
      {
        "id": "Observation.component",
        "path": "Observation.component",
        "slicing": {
          "discriminator": [
            {
              "type": "pattern",
              "path": "$this.code"
            }
          ],
          "rules": "open"
        },
        "min": 2
      },
      {
        "id": "Observation.component:type",
        "path": "Observation.component",
        "sliceName": "type",
        "min": 1,
        "max": "1",
        "mustSupport": true
      },
      {
        "id": "Observation.component:type.code",
        "path": "Observation.component.code",
        "patternCodeableConcept": {
          "coding": [
            {
              "code": "246423001",
              "system": "http://snomed.info/sct",
              "display": "Test protocol used (attribute)"
            }
          ]
        }
      },
      {
        "id": "Observation.component:type.value[x]",
        "path": "Observation.component.value[x]",
        "type": [
          {
            "code": "CodeableConcept"
          },
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "Observation.component:result",
        "path": "Observation.component",
        "sliceName": "result",
        "min": 1,
        "max": "1",
        "mustSupport": true
      },
      {
        "id": "Observation.component:result.code",
        "path": "Observation.component.code",
        "patternCodeableConcept": {
          "coding": [
            {
              "code": "79409006",
              "system": "http://snomed.info/sct",
              "display": "Resulting in (attribute)"
            }
          ]
        }
      },
      {
        "id": "Observation.component:result.value[x]",
        "path": "Observation.component.value[x]",
        "type": [
          {
            "code": "CodeableConcept"
          }
        ]
      }
    ]
  }
}
